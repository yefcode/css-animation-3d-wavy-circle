$rg-color-beginning: #78d5ff;
$rg-color-ending: #0081e8;
$border-color: #fff;
$list-circle-position-properties:
    (20px, 20px, 20px, 20px, 1.4s),
    (30px, 30px, 30px, 30px, 1.3s),
    (40px, 40px, 40px, 40px, 1.2s),
    (50px, 50px, 50px, 50px, 1.1s),
    (60px, 60px, 60px, 60px, 1.0s),
    (70px, 70px, 70px, 70px, .9s),
    (80px, 80px, 80px, 80px, .8s),
    (90px, 90px, 90px, 90px, .7s),
    (100px, 100px, 100px, 100px, .6s),
    (110px, 110px, 110px, 110px, .5s),
    (120px, 120px, 120px, 120px, .4s),
    (130px, 130px, 130px, 130px, .3s),
    (140px, 140px, 140px, 140px, .2s),
    (150px, 150px, 150px, 150px, .1s),
    (160px, 160px, 160px, 160px, 0s)
    ;

@mixin circle-position($top, $left, $right, $bottom, $animation-delay) {
    top: $top;
    left: $left;
    right: $right;
    bottom: $bottom;
    animation-delay: $animation-delay;
}
body {
    margin: 0;
    padding: 0;
    display: flex;
    justify-content: center;
    align-items: center;
    min-height: 100vh;
    background:
    radial-gradient($rg-color-beginning, $rg-color-ending);
}

.loader {
    position: relative;
    width: 320px;
    height: 320px;
    // according with the width and height we can create the amount of circles and size.
    /* width: 330px;
    height: 330px; */
    transform-style: preserve-3d;
    transform: perspective(500px) rotateX(60deg);
}

span {
    position: absolute;
    display: block;
    border: 2px solid $border-color;
    box-sizing: border-box;
    border-radius: 50%;
    transform: translateZ(-100px);
    animation: animate-circle 3s ease-in-out infinite;
    @each $cp-properties in $list-circle-position-properties {
        $index: index($list-circle-position-properties, $cp-properties);
        &:nth-child(#{$index}){
            @include circle-position($cp-properties...);
        }
    }
}

@keyframes animate-circle {
    0%,
    100% {
        transform: translateZ(-100px);
    }
    50% {
        transform: translateZ(100px);
    }
}